name: Run ktlint with reviewdog

on:
  push:
    branches:
      - main
    paths:
      - '**/*.kt'
      - '**/*.kts'
      - '.github/workflows/ktlint-reviewdog.yml'
      - '.ktlintignore'
      - 'build.gradle.kts'
  pull_request:
    branches:
      - main
    paths:
      - '**/*.kt'
      - '**/*.kts'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  ktlint:
    runs-on: ubuntu-latest
    name: ktlint with reviewdog

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Make gradlew executable
        run: chmod +x ./gradlew

      - name: Run ktlint check
        id: ktlint
        run: |
          ./gradlew ktlintCheck --continue 2>&1 | tee ktlint-output.txt || true
        continue-on-error: true

      - name: Set up Node for reviewdog
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install reviewdog
        run: |
          mkdir -p "$HOME/bin"
          curl https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh | sh -s -- -b "$HOME/bin"
          echo "$HOME/bin" >> $GITHUB_PATH

      - name: Generate reviewdog format report
        run: |
          # Buscar reportes JSON de ktlint y convertirlos
          find . -name "*ktlint*.json" -type f 2>/dev/null | while read file; do
            if [ -f "$file" ]; then
              echo "Procesando: $file"
              # Convertir JSON a formato reviewdog
              node -e "
                const data = require('$file');
                data.forEach(item => {
                  console.log('$file::' + item.line + '::' + item.column + '::warning::' + item.message + ' (' + item.rule + ')');
                });
              " > reviewdog-report.txt 2>/dev/null || true
            fi
          done
          [ -f reviewdog-report.txt ] && cat reviewdog-report.txt || echo "No ktlint issues found"

      - name: Run reviewdog
        if: github.event_name == 'pull_request'
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          cat ktlint-output.txt | reviewdog -f checkstyle -reporter=github-pr-review || true

      - name: Upload ktlint report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ktlint-report
          path: |
            **/build/reports/ktlint/
            ktlint-output.txt
          retention-days: 30

      - name: Comment PR with results
        if: github.event_name == 'pull_request' && always()
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const output = fs.readFileSync('ktlint-output.txt', 'utf8');
            const hasErrors = output.includes('[error]') || output.includes('Error');
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: hasErrors 
                ? '❌ **ktlint** encontró problemas de estilo.\n\n```\n' + output.substring(0, 3000) + '\n```'
                : '✅ **ktlint** completado sin errores.'
            });


